<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap Form with Validation</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <style>
    .form-group {
      margin-bottom: 1rem;
    }
    .invalid-feedback {
      display: none; /* Hide feedback initially */
    }
    /* Custom CSS */
    .navbar-brand {
      font-size: 1.5rem;
    }
    #myForm {
      max-width: 500px;
      margin: auto;
    }
    h1 {
      color: #007bff;
    }
    button[type="submit"] {
      margin-top: 1rem;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Registration App</a>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="#" id="showUsers">Show All Users</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="container mt-5">
    <h1 class="text-center mb-4">Registration Form</h1>
    <form id="myForm" class="needs-validation"> 
      <div class="form-group">
        <label for="name">Name</label>
        <input type="text" class="form-control" id="name" placeholder="Enter your name" required>
        <div class="invalid-feedback">
          Please enter your name.
        </div>
      </div>
      <div class="form-group">
        <label for="email">Email Address</label>
        <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
        <div class="invalid-feedback">
          Please enter a valid email address.
        </div>
      </div>
      <div class="form-group">
        <label for="phone">Phone Number</label>
        <input type="tel" class="form-control" id="phone" placeholder="Enter your phone number" required>
        <div class="invalid-feedback">
          Please enter your phone number.
        </div>
      </div>
      <div class="form-group">
        <label for="address">Address</label>
        <textarea class="form-control" id="address" rows="3" placeholder="Enter your address" required></textarea>
        <div class="invalid-feedback">
          Please enter your address.
        </div>
      </div>
      <div class="form-group">
        <label for="gender">Gender</label>
        <select class="form-select" id="gender" required>
          <option value="">Choose Gender</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
          <option value="other">Other</option>
        </select>
        <div class="invalid-feedback">
          Please select your gender.
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
  <script>
    (function() {
      'use strict';
  
      var form = document.getElementById('myForm');
  
      form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        } else {
          // Collect all form data
          var userData = {};
          userData.name = document.getElementById('name').value;
          userData.email = document.getElementById('email').value;
          userData.phone = document.getElementById('phone').value;
          userData.address = document.getElementById('address').value;
          userData.gender = document.getElementById('gender').value;
  
          // Retrieve existing users from localStorage or initialize an empty array
          var users = JSON.parse(localStorage.getItem('users')) || [];
  
          // Add new user data to the array
          users.push(userData);
  
          // Save the updated user data back to localStorage
          localStorage.setItem('users', JSON.stringify(users));
  
          // Do something with the form data (e.g., send to server)
          console.log(userData);
          alert("Form submitted successfully!");
        }
  
        form.reset();
        form.classList.add('was-validated'); // Manually trigger validation after submission
      });

      // Show all users
      var showUsersLink = document.getElementById('showUsers');
      showUsersLink.addEventListener('click', function(event) {
        event.preventDefault();
        var users = JSON.parse(localStorage.getItem('users')) || [];
        if (users.length > 0) {
          alert("All Users:\n" + JSON.stringify(users, null, 2));
        } else {
          alert("No users found.");
        }
      });
    })();
  </script>
</body>
</html>
